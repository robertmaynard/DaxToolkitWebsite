
# Required (sort of) for all cmake files
cmake_minimum_required(VERSION 2.8)

# All CMake projects start with this command.
project(daxexample CXX)

# This command will find the Dax configuration. It will ask you for the
# location of a file named DaxConfig.cmake, which is either in the Dax build
# directory or in the include directory of an install.
find_package(Dax REQUIRED)

# This will load in all the necessary configuration for using Dax with OpenMP.
# Because we specified REQUIRED, CMake will error if the configuration could
# not be loaded.
DaxConfigureOpenMP(REQUIRED)

# Now just create an executable like normal.
add_executable(daxexample_openmp ex1.cxx)

# This will load in all the necessary configuration for compiling with Cuda.
# This time we will allow the load to fail and check for an error.
DaxConfigureCuda()

# If the configuration is successful, then Dax_Cuda_FOUND is set to a true
# value. Likewise all the DaxConfigure<Device> macros will set a
# Dax_<Device>_Found variable on success.
if (Dax_Cuda_FOUND)
  # We can compile the exact same Dax code to use on Cuda. To demonstrate this,
  # let's copy the ex1.cxx to ex1.cu (CMake only compiles .cu files with the
  # Cuda nvcc copiler).
  configure_file(ex1.cxx ${CMAKE_BINARY_DIR}/ex1.cu COPYONLY)

  # Now create an executable (with Cuda) per standard CMake convention.
  cuda_add_executable(daxexample_cuda ${CMAKE_BINARY_DIR}/ex1.cu)
endif (Dax_Cuda_FOUND)
